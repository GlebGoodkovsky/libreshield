document.addEventListener('DOMContentLoaded',()=>{const e=document.getElementById("theme-toggle"),t=document.getElementById("blockPageMessage"),o=document.getElementById("saveButton"),n=document.getElementById("status"),d=document.getElementById("exportSettingsBtn"),i=document.getElementById("importSettingsBtn"),a=[{listId:"blockedDomainsList",inputId:"newDomain",buttonId:"addDomain",storageKey:"blockedDomains",dataArray:[]},{listId:"blockedKeywordsList",inputId:"newKeyword",buttonId:"addKeyword",storageKey:"blockedKeywords",dataArray:[]},{listId:"allowedSitesList",inputId:"newAllowedSite",buttonId:"addAllowedSite",storageKey:"allowedSites",dataArray:[]}];function c(){const e=["blockPageMessage","theme",...a.map(e=>e.storageKey)];chrome.storage.local.get(e,e=>{t.value=e.blockPageMessage||"I don't need this.",a.forEach(t=>{t.dataArray=e[t.storageKey]||[],r(document.getElementById(t.listId),t.dataArray)}),"dark"===e.theme&&(document.body.classList.add("dark-mode"),themeToggle.checked=!0)})}function r(e,t){e.innerHTML="",0===t.length?(e.innerHTML='<li style="font-style: italic; color: var(--subtle-text-color); justify-content: center;">No items added yet.</li>',e.querySelector("li")):(t.forEach(o=>{const n=document.createElement("li");n.textContent=o;const d=document.createElement("button");d.textContent="X",d.classList.add("delete-btn"),d.onclick=()=>l(o,t,e),n.appendChild(d),e.appendChild(n)}))}async function s(e,t,o){const d=e.value.trim();if(!d)return;const i=d.includes(",")?d.split(",").map(e=>e.trim()).filter(Boolean):[d];let c=0;i.forEach(e=>{t.includes(e)||(t.push(e),c++)}),c>0?(await chrome.storage.local.set({[o.id.replace("List","")]:t}),r(o,t),e.value="",n.textContent=`Added ${c} new item(s).`):n.textContent="Item(s) already in list.",setTimeout(()=>{n.textContent=""},2e3)}async function l(e,t,o){const d=t.indexOf(e);d>-1&&(t.splice(d,1),await chrome.storage.local.set({[o.id.replace("List","")]:t}),r(o,t),n.textContent=`Removed: ${e}`,setTimeout(()=>{n.textContent=""},2e3))}async function u(){n.textContent="Exporting...";try{const e=await chrome.storage.local.get(null),t=JSON.stringify(e,null,2),o=new Blob([t],{type:"application/json"}),d=URL.createObjectURL(o),i=document.createElement("a");i.href=d,i.download=`libreshield-settings-${Date.now()}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(d),n.textContent="Settings exported!"}catch(e){n.textContent="Export failed."}setTimeout(()=>{n.textContent=""},3e3)}function m(){const e=document.createElement("input");e.type="file",e.accept="application/json",e.onchange=t=>{const o=t.target.files[0];if(!o)return;const d=new FileReader;d.onload=t=>{try{const o=JSON.parse(t.target.result);chrome.storage.local.set(o,()=>{n.textContent="Import successful! Reloading...",setTimeout(()=>location.reload(),1500)})}catch(t){n.textContent="Error: Invalid settings file.",setTimeout(()=>{n.textContent=""},3e3)}},d.readAsText(o)},e.click()}a.forEach(e=>{const t=document.getElementById(e.inputId),o=document.getElementById(e.buttonId),n=document.getElementById(e.listId);o.addEventListener("click",()=>s(t,e.dataArray,n)),t.addEventListener("keydown",o=>{o.key==="Enter"&&(o.preventDefault(),s(t,e.dataArray,n))})}),o.addEventListener("click",()=>{chrome.storage.local.set({blockPageMessage:t.value},()=>{n.textContent="Block page message saved!",setTimeout(()=>{n.textContent=""},2e3)})}),e.addEventListener("change",()=>{const t=e.checked?"dark":"light";document.body.classList.toggle("dark-mode",e.checked),chrome.storage.local.set({theme:t})}),d.addEventListener("click",u),i.addEventListener("click",m),c()});
